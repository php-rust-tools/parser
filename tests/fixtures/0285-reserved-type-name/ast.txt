[
    FullOpeningTag(
        Span(
            1,
            1,
        ),
    ),
    Class(
        Class {
            attributes: [],
            modifiers: ClassModifierGroup {
                modifiers: [],
            },
            class: Span(
                4,
                1,
            ),
            name: SimpleIdentifier {
                span: Span(
                    4,
                    7,
                ),
                value: "enum",
            },
            extends: None,
            implements: None,
            body: ClassBody {
                left_brace: Span(
                    4,
                    12,
                ),
                members: [],
                right_brace: Span(
                    4,
                    13,
                ),
            },
        },
    ),
    Interface(
        Interface {
            attributes: [],
            span: Span(
                5,
                1,
            ),
            name: SimpleIdentifier {
                span: Span(
                    5,
                    11,
                ),
                value: "enum",
            },
            extends: None,
            body: InterfaceBody {
                left_brace: Span(
                    5,
                    16,
                ),
                members: [],
                right_brace: Span(
                    5,
                    17,
                ),
            },
        },
    ),
    Trait(
        Trait {
            span: Span(
                6,
                1,
            ),
            name: SimpleIdentifier {
                span: Span(
                    6,
                    7,
                ),
                value: "enum",
            },
            attributes: [],
            body: TraitBody {
                left_brace: Span(
                    6,
                    12,
                ),
                members: [],
                right_brace: Span(
                    6,
                    13,
                ),
            },
        },
    ),
    UnitEnum(
        UnitEnum {
            attributes: [],
            span: Span(
                7,
                1,
            ),
            name: SimpleIdentifier {
                span: Span(
                    7,
                    6,
                ),
                value: "enum",
            },
            implements: [],
            body: UnitEnumBody {
                left_brace: Span(
                    7,
                    11,
                ),
                members: [],
                right_brace: Span(
                    7,
                    12,
                ),
            },
        },
    ),
    Function(
        Function {
            comments: CommentGroup {
                comments: [],
            },
            attributes: [],
            function: Span(
                8,
                1,
            ),
            ampersand: None,
            name: SimpleIdentifier {
                span: Span(
                    8,
                    10,
                ),
                value: "enum",
            },
            parameters: FunctionParameterList {
                comments: CommentGroup {
                    comments: [],
                },
                left_parenthesis: Span(
                    8,
                    14,
                ),
                parameters: CommaSeparated {
                    inner: [],
                    commas: [],
                },
                right_parenthesis: Span(
                    8,
                    15,
                ),
            },
            return_type: Some(
                ReturnType {
                    colon: Span(
                        8,
                        16,
                    ),
                    data_type: Named(
                        Span(
                            8,
                            18,
                        ),
                        "enum",
                    ),
                },
            ),
            body: FunctionBody {
                comments: CommentGroup {
                    comments: [],
                },
                left_brace: Span(
                    8,
                    23,
                ),
                statements: [],
                right_brace: Span(
                    8,
                    24,
                ),
            },
        },
    ),
    Class(
        Class {
            attributes: [],
            modifiers: ClassModifierGroup {
                modifiers: [],
            },
            class: Span(
                10,
                1,
            ),
            name: SimpleIdentifier {
                span: Span(
                    10,
                    7,
                ),
                value: "from",
            },
            extends: None,
            implements: None,
            body: ClassBody {
                left_brace: Span(
                    10,
                    12,
                ),
                members: [],
                right_brace: Span(
                    10,
                    13,
                ),
            },
        },
    ),
    Interface(
        Interface {
            attributes: [],
            span: Span(
                11,
                1,
            ),
            name: SimpleIdentifier {
                span: Span(
                    11,
                    11,
                ),
                value: "from",
            },
            extends: None,
            body: InterfaceBody {
                left_brace: Span(
                    11,
                    16,
                ),
                members: [],
                right_brace: Span(
                    11,
                    17,
                ),
            },
        },
    ),
    Trait(
        Trait {
            span: Span(
                12,
                1,
            ),
            name: SimpleIdentifier {
                span: Span(
                    12,
                    7,
                ),
                value: "from",
            },
            attributes: [],
            body: TraitBody {
                left_brace: Span(
                    12,
                    12,
                ),
                members: [],
                right_brace: Span(
                    12,
                    13,
                ),
            },
        },
    ),
    UnitEnum(
        UnitEnum {
            attributes: [],
            span: Span(
                13,
                1,
            ),
            name: SimpleIdentifier {
                span: Span(
                    13,
                    6,
                ),
                value: "from",
            },
            implements: [],
            body: UnitEnumBody {
                left_brace: Span(
                    13,
                    11,
                ),
                members: [],
                right_brace: Span(
                    13,
                    12,
                ),
            },
        },
    ),
    Function(
        Function {
            comments: CommentGroup {
                comments: [],
            },
            attributes: [],
            function: Span(
                14,
                1,
            ),
            ampersand: None,
            name: SimpleIdentifier {
                span: Span(
                    14,
                    10,
                ),
                value: "from",
            },
            parameters: FunctionParameterList {
                comments: CommentGroup {
                    comments: [],
                },
                left_parenthesis: Span(
                    14,
                    14,
                ),
                parameters: CommaSeparated {
                    inner: [],
                    commas: [],
                },
                right_parenthesis: Span(
                    14,
                    15,
                ),
            },
            return_type: Some(
                ReturnType {
                    colon: Span(
                        14,
                        16,
                    ),
                    data_type: Named(
                        Span(
                            14,
                            18,
                        ),
                        "from",
                    ),
                },
            ),
            body: FunctionBody {
                comments: CommentGroup {
                    comments: [],
                },
                left_brace: Span(
                    14,
                    23,
                ),
                statements: [],
                right_brace: Span(
                    14,
                    24,
                ),
            },
        },
    ),
    Expression {
        expression: FunctionCall {
            target: Identifier(
                SimpleIdentifier(
                    SimpleIdentifier {
                        span: Span(
                            16,
                            1,
                        ),
                        value: "from",
                    },
                ),
            ),
            arguments: ArgumentList {
                comments: CommentGroup {
                    comments: [],
                },
                left_parenthesis: Span(
                    16,
                    5,
                ),
                arguments: [],
                right_parenthesis: Span(
                    16,
                    6,
                ),
            },
        },
        ending: Semicolon(
            Span(
                16,
                7,
            ),
        ),
    },
    Expression {
        expression: FunctionCall {
            target: Identifier(
                SimpleIdentifier(
                    SimpleIdentifier {
                        span: Span(
                            17,
                            1,
                        ),
                        value: "enum",
                    },
                ),
            ),
            arguments: ArgumentList {
                comments: CommentGroup {
                    comments: [],
                },
                left_parenthesis: Span(
                    17,
                    5,
                ),
                arguments: [],
                right_parenthesis: Span(
                    17,
                    6,
                ),
            },
        },
        ending: Semicolon(
            Span(
                17,
                7,
            ),
        ),
    },
    Expression {
        expression: FunctionCall {
            target: Identifier(
                SimpleIdentifier(
                    SimpleIdentifier {
                        span: Span(
                            19,
                            1,
                        ),
                        value: "from",
                    },
                ),
            ),
            arguments: ArgumentList {
                comments: CommentGroup {
                    comments: [],
                },
                left_parenthesis: Span(
                    19,
                    5,
                ),
                arguments: [],
                right_parenthesis: Span(
                    19,
                    6,
                ),
            },
        },
        ending: Semicolon(
            Span(
                19,
                7,
            ),
        ),
    },
    Expression {
        expression: FunctionCall {
            target: Identifier(
                SimpleIdentifier(
                    SimpleIdentifier {
                        span: Span(
                            20,
                            1,
                        ),
                        value: "enum",
                    },
                ),
            ),
            arguments: ArgumentList {
                comments: CommentGroup {
                    comments: [],
                },
                left_parenthesis: Span(
                    20,
                    5,
                ),
                arguments: [],
                right_parenthesis: Span(
                    20,
                    6,
                ),
            },
        },
        ending: Semicolon(
            Span(
                20,
                7,
            ),
        ),
    },
    Expression {
        expression: StaticMethodCall {
            target: Identifier(
                SimpleIdentifier(
                    SimpleIdentifier {
                        span: Span(
                            22,
                            1,
                        ),
                        value: "enum",
                    },
                ),
            ),
            double_colon: Span(
                22,
                5,
            ),
            method: Identifier(
                SimpleIdentifier(
                    SimpleIdentifier {
                        span: Span(
                            22,
                            7,
                        ),
                        value: "foo",
                    },
                ),
            ),
            arguments: ArgumentList {
                comments: CommentGroup {
                    comments: [],
                },
                left_parenthesis: Span(
                    22,
                    10,
                ),
                arguments: [],
                right_parenthesis: Span(
                    22,
                    11,
                ),
            },
        },
        ending: Semicolon(
            Span(
                22,
                12,
            ),
        ),
    },
    Expression {
        expression: StaticMethodCall {
            target: Identifier(
                SimpleIdentifier(
                    SimpleIdentifier {
                        span: Span(
                            23,
                            1,
                        ),
                        value: "from",
                    },
                ),
            ),
            double_colon: Span(
                23,
                5,
            ),
            method: Identifier(
                SimpleIdentifier(
                    SimpleIdentifier {
                        span: Span(
                            23,
                            7,
                        ),
                        value: "foo",
                    },
                ),
            ),
            arguments: ArgumentList {
                comments: CommentGroup {
                    comments: [],
                },
                left_parenthesis: Span(
                    23,
                    10,
                ),
                arguments: [],
                right_parenthesis: Span(
                    23,
                    11,
                ),
            },
        },
        ending: Semicolon(
            Span(
                23,
                12,
            ),
        ),
    },
    Expression {
        expression: StaticMethodCall {
            target: Identifier(
                SimpleIdentifier(
                    SimpleIdentifier {
                        span: Span(
                            25,
                            1,
                        ),
                        value: "enum",
                    },
                ),
            ),
            double_colon: Span(
                25,
                5,
            ),
            method: Identifier(
                SimpleIdentifier(
                    SimpleIdentifier {
                        span: Span(
                            25,
                            7,
                        ),
                        value: "foo",
                    },
                ),
            ),
            arguments: ArgumentList {
                comments: CommentGroup {
                    comments: [],
                },
                left_parenthesis: Span(
                    25,
                    10,
                ),
                arguments: [],
                right_parenthesis: Span(
                    25,
                    11,
                ),
            },
        },
        ending: Semicolon(
            Span(
                25,
                12,
            ),
        ),
    },
    Expression {
        expression: StaticMethodCall {
            target: Identifier(
                SimpleIdentifier(
                    SimpleIdentifier {
                        span: Span(
                            26,
                            1,
                        ),
                        value: "from",
                    },
                ),
            ),
            double_colon: Span(
                26,
                5,
            ),
            method: Identifier(
                SimpleIdentifier(
                    SimpleIdentifier {
                        span: Span(
                            26,
                            7,
                        ),
                        value: "foo",
                    },
                ),
            ),
            arguments: ArgumentList {
                comments: CommentGroup {
                    comments: [],
                },
                left_parenthesis: Span(
                    26,
                    10,
                ),
                arguments: [],
                right_parenthesis: Span(
                    26,
                    11,
                ),
            },
        },
        ending: Semicolon(
            Span(
                26,
                12,
            ),
        ),
    },
    Expression {
        expression: Instanceof {
            left: Variable(
                SimpleVariable(
                    SimpleVariable {
                        span: Span(
                            28,
                            1,
                        ),
                        name: "a",
                    },
                ),
            ),
            span: Span(
                28,
                4,
            ),
            right: Identifier(
                SimpleIdentifier(
                    SimpleIdentifier {
                        span: Span(
                            28,
                            15,
                        ),
                        value: "enum",
                    },
                ),
            ),
        },
        ending: Semicolon(
            Span(
                28,
                19,
            ),
        ),
    },
    Expression {
        expression: Instanceof {
            left: Variable(
                SimpleVariable(
                    SimpleVariable {
                        span: Span(
                            29,
                            1,
                        ),
                        name: "a",
                    },
                ),
            ),
            span: Span(
                29,
                4,
            ),
            right: Identifier(
                SimpleIdentifier(
                    SimpleIdentifier {
                        span: Span(
                            29,
                            15,
                        ),
                        value: "from",
                    },
                ),
            ),
        },
        ending: Semicolon(
            Span(
                29,
                19,
            ),
        ),
    },
    Expression {
        expression: Instanceof {
            left: Variable(
                SimpleVariable(
                    SimpleVariable {
                        span: Span(
                            31,
                            1,
                        ),
                        name: "a",
                    },
                ),
            ),
            span: Span(
                31,
                4,
            ),
            right: Identifier(
                SimpleIdentifier(
                    SimpleIdentifier {
                        span: Span(
                            31,
                            15,
                        ),
                        value: "enum",
                    },
                ),
            ),
        },
        ending: Semicolon(
            Span(
                31,
                19,
            ),
        ),
    },
    Expression {
        expression: Instanceof {
            left: Variable(
                SimpleVariable(
                    SimpleVariable {
                        span: Span(
                            32,
                            1,
                        ),
                        name: "a",
                    },
                ),
            ),
            span: Span(
                32,
                4,
            ),
            right: Identifier(
                SimpleIdentifier(
                    SimpleIdentifier {
                        span: Span(
                            32,
                            15,
                        ),
                        value: "from",
                    },
                ),
            ),
        },
        ending: Semicolon(
            Span(
                32,
                19,
            ),
        ),
    },
    Expression {
        expression: ConstFetch {
            target: Identifier(
                SimpleIdentifier(
                    SimpleIdentifier {
                        span: Span(
                            34,
                            1,
                        ),
                        value: "enum",
                    },
                ),
            ),
            constant: SimpleIdentifier {
                span: Span(
                    34,
                    7,
                ),
                value: "class",
            },
        },
        ending: Semicolon(
            Span(
                34,
                12,
            ),
        ),
    },
    Expression {
        expression: ConstFetch {
            target: Identifier(
                SimpleIdentifier(
                    SimpleIdentifier {
                        span: Span(
                            35,
                            1,
                        ),
                        value: "from",
                    },
                ),
            ),
            constant: SimpleIdentifier {
                span: Span(
                    35,
                    7,
                ),
                value: "class",
            },
        },
        ending: Semicolon(
            Span(
                35,
                12,
            ),
        ),
    },
    Expression {
        expression: ConstFetch {
            target: Identifier(
                SimpleIdentifier(
                    SimpleIdentifier {
                        span: Span(
                            36,
                            1,
                        ),
                        value: "enum",
                    },
                ),
            ),
            constant: SimpleIdentifier {
                span: Span(
                    36,
                    7,
                ),
                value: "class",
            },
        },
        ending: Semicolon(
            Span(
                36,
                12,
            ),
        ),
    },
    Expression {
        expression: ConstFetch {
            target: Identifier(
                SimpleIdentifier(
                    SimpleIdentifier {
                        span: Span(
                            37,
                            1,
                        ),
                        value: "from",
                    },
                ),
            ),
            constant: SimpleIdentifier {
                span: Span(
                    37,
                    7,
                ),
                value: "class",
            },
        },
        ending: Semicolon(
            Span(
                37,
                12,
            ),
        ),
    },
    GotoLabel(
        GotoLabel {
            comments: CommentGroup {
                comments: [],
            },
            label: SimpleIdentifier {
                span: Span(
                    39,
                    1,
                ),
                value: "from",
            },
            colon: Span(
                39,
                5,
            ),
        },
    ),
    Expression {
        expression: Literal(
            Integer(
                LiteralInteger {
                    value: "12",
                    span: Span(
                        39,
                        7,
                    ),
                },
            ),
        ),
        ending: Semicolon(
            Span(
                39,
                9,
            ),
        ),
    },
    Goto(
        GotoStatement {
            comments: CommentGroup {
                comments: [],
            },
            keyword: Span(
                41,
                1,
            ),
            label: SimpleIdentifier {
                span: Span(
                    41,
                    6,
                ),
                value: "from",
            },
            semicolon: Span(
                41,
                10,
            ),
        },
    ),
    GotoLabel(
        GotoLabel {
            comments: CommentGroup {
                comments: [],
            },
            label: SimpleIdentifier {
                span: Span(
                    43,
                    1,
                ),
                value: "enum",
            },
            colon: Span(
                43,
                5,
            ),
        },
    ),
    Expression {
        expression: Literal(
            Integer(
                LiteralInteger {
                    value: "123",
                    span: Span(
                        43,
                        7,
                    ),
                },
            ),
        ),
        ending: Semicolon(
            Span(
                43,
                10,
            ),
        ),
    },
    Goto(
        GotoStatement {
            comments: CommentGroup {
                comments: [],
            },
            keyword: Span(
                45,
                1,
            ),
            label: SimpleIdentifier {
                span: Span(
                    45,
                    6,
                ),
                value: "enum",
            },
            semicolon: Span(
                45,
                10,
            ),
        },
    ),
]
