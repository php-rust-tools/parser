[
    Expression {
        expr: Infix {
            lhs: Variable(
                Variable {
                    start: (
                        3,
                        1,
                    ),
                    name: "a",
                    end: (
                        3,
                        4,
                    ),
                },
            ),
            op: Assign,
            rhs: New {
                target: Identifier(
                    Identifier {
                        start: (
                            3,
                            10,
                        ),
                        name: "Foo",
                        end: (
                            3,
                            13,
                        ),
                    },
                ),
                span: (
                    3,
                    6,
                ),
                args: [],
            },
        },
    },
    Expression {
        expr: Infix {
            lhs: Variable(
                Variable {
                    start: (
                        4,
                        1,
                    ),
                    name: "b",
                    end: (
                        4,
                        4,
                    ),
                },
            ),
            op: Assign,
            rhs: UnaryPlus {
                span: (
                    4,
                    6,
                ),
                value: LiteralInteger {
                    i: "1",
                },
            },
        },
    },
    Expression {
        expr: Infix {
            lhs: Variable(
                Variable {
                    start: (
                        5,
                        1,
                    ),
                    name: "c",
                    end: (
                        5,
                        4,
                    ),
                },
            ),
            op: Assign,
            rhs: BitwiseNot {
                span: (
                    5,
                    6,
                ),
                value: LiteralInteger {
                    i: "2",
                },
            },
        },
    },
    Expression {
        expr: Infix {
            lhs: Variable(
                Variable {
                    start: (
                        6,
                        1,
                    ),
                    name: "d",
                    end: (
                        6,
                        4,
                    ),
                },
            ),
            op: Assign,
            rhs: PreDecrement {
                span: (
                    6,
                    6,
                ),
                value: Variable(
                    Variable {
                        start: (
                            6,
                            8,
                        ),
                        name: "b",
                        end: (
                            6,
                            10,
                        ),
                    },
                ),
            },
        },
    },
    Expression {
        expr: Infix {
            lhs: Variable(
                Variable {
                    start: (
                        7,
                        1,
                    ),
                    name: "e",
                    end: (
                        7,
                        4,
                    ),
                },
            ),
            op: Assign,
            rhs: PreIncrement {
                span: (
                    7,
                    6,
                ),
                value: Variable(
                    Variable {
                        start: (
                            7,
                            8,
                        ),
                        name: "d",
                        end: (
                            7,
                            10,
                        ),
                    },
                ),
            },
        },
    },
]
