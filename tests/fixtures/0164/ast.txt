[
    FullOpeningTag(
        Span(
            1,
            1,
        ),
    ),
    Namespace(
        Braced(
            BracedNamespace {
                span: Span(
                    3,
                    1,
                ),
                name: None,
                body: BracedNamespaceBody {
                    start: Span(
                        3,
                        11,
                    ),
                    end: Span(
                        5,
                        1,
                    ),
                    statements: [
                        Function(
                            Function {
                                comments: CommentGroup {
                                    comments: [],
                                },
                                attributes: [],
                                function: Span(
                                    4,
                                    5,
                                ),
                                ampersand: None,
                                name: SimpleIdentifier {
                                    span: Span(
                                        4,
                                        14,
                                    ),
                                    value: "foo",
                                },
                                parameters: FunctionParameterList {
                                    comments: CommentGroup {
                                        comments: [],
                                    },
                                    left_parenthesis: Span(
                                        4,
                                        17,
                                    ),
                                    parameters: CommaSeparated {
                                        inner: [],
                                        commas: [],
                                    },
                                    right_parenthesis: Span(
                                        4,
                                        18,
                                    ),
                                },
                                return_type: None,
                                body: FunctionBody {
                                    comments: CommentGroup {
                                        comments: [],
                                    },
                                    left_brace: Span(
                                        4,
                                        20,
                                    ),
                                    statements: [],
                                    right_brace: Span(
                                        4,
                                        21,
                                    ),
                                },
                            },
                        ),
                    ],
                },
            },
        ),
    ),
    Namespace(
        Braced(
            BracedNamespace {
                span: Span(
                    7,
                    1,
                ),
                name: Some(
                    SimpleIdentifier {
                        span: Span(
                            7,
                            11,
                        ),
                        value: "a",
                    },
                ),
                body: BracedNamespaceBody {
                    start: Span(
                        7,
                        13,
                    ),
                    end: Span(
                        9,
                        1,
                    ),
                    statements: [
                        Function(
                            Function {
                                comments: CommentGroup {
                                    comments: [],
                                },
                                attributes: [],
                                function: Span(
                                    8,
                                    5,
                                ),
                                ampersand: None,
                                name: SimpleIdentifier {
                                    span: Span(
                                        8,
                                        14,
                                    ),
                                    value: "foo",
                                },
                                parameters: FunctionParameterList {
                                    comments: CommentGroup {
                                        comments: [],
                                    },
                                    left_parenthesis: Span(
                                        8,
                                        17,
                                    ),
                                    parameters: CommaSeparated {
                                        inner: [],
                                        commas: [],
                                    },
                                    right_parenthesis: Span(
                                        8,
                                        18,
                                    ),
                                },
                                return_type: None,
                                body: FunctionBody {
                                    comments: CommentGroup {
                                        comments: [],
                                    },
                                    left_brace: Span(
                                        8,
                                        20,
                                    ),
                                    statements: [],
                                    right_brace: Span(
                                        8,
                                        21,
                                    ),
                                },
                            },
                        ),
                    ],
                },
            },
        ),
    ),
]
