[
    Expression {
        expr: AssignmentOperation(
            Assign {
                left: Variable(
                    SimpleVariable(
                        SimpleVariable {
                            span: (
                                3,
                                1,
                            ),
                            name: "a",
                        },
                    ),
                ),
                span: (
                    3,
                    4,
                ),
                right: ArithmeticOperation(
                    Exponentiation {
                        left: LiteralInteger {
                            i: "2",
                        },
                        span: (
                            3,
                            8,
                        ),
                        right: LiteralInteger {
                            i: "2",
                        },
                    },
                ),
            },
        ),
    },
    Expression {
        expr: AssignmentOperation(
            Assign {
                left: Variable(
                    SimpleVariable(
                        SimpleVariable {
                            span: (
                                5,
                                1,
                            ),
                            name: "b",
                        },
                    ),
                ),
                span: (
                    5,
                    4,
                ),
                right: Ternary {
                    condition: LiteralInteger {
                        i: "1",
                    },
                    then: Some(
                        LiteralInteger {
                            i: "2",
                        },
                    ),
                    else: LiteralInteger {
                        i: "3",
                    },
                },
            },
        ),
    },
    Expression {
        expr: AssignmentOperation(
            Assign {
                left: Variable(
                    SimpleVariable(
                        SimpleVariable {
                            span: (
                                7,
                                1,
                            ),
                            name: "c",
                        },
                    ),
                ),
                span: (
                    7,
                    4,
                ),
                right: Ternary {
                    condition: LiteralInteger {
                        i: "1",
                    },
                    then: Some(
                        Ternary {
                            condition: LiteralInteger {
                                i: "2",
                            },
                            then: Some(
                                LiteralInteger {
                                    i: "3",
                                },
                            ),
                            else: LiteralInteger {
                                i: "4",
                            },
                        },
                    ),
                    else: LiteralInteger {
                        i: "5",
                    },
                },
            },
        ),
    },
    Expression {
        expr: AssignmentOperation(
            Assign {
                left: Variable(
                    SimpleVariable(
                        SimpleVariable {
                            span: (
                                9,
                                1,
                            ),
                            name: "d",
                        },
                    ),
                ),
                span: (
                    9,
                    4,
                ),
                right: Ternary {
                    condition: LiteralInteger {
                        i: "1",
                    },
                    then: None,
                    else: Ternary {
                        condition: LiteralInteger {
                            i: "2",
                        },
                        then: None,
                        else: LiteralInteger {
                            i: "3",
                        },
                    },
                },
            },
        ),
    },
    Expression {
        expr: AssignmentOperation(
            Assign {
                left: Variable(
                    SimpleVariable(
                        SimpleVariable {
                            span: (
                                11,
                                1,
                            ),
                            name: "e",
                        },
                    ),
                ),
                span: (
                    11,
                    4,
                ),
                right: Coalesce {
                    lhs: LiteralInteger {
                        i: "1",
                    },
                    rhs: LiteralInteger {
                        i: "2",
                    },
                },
            },
        ),
    },
    Expression {
        expr: AssignmentOperation(
            Assign {
                left: Variable(
                    SimpleVariable(
                        SimpleVariable {
                            span: (
                                13,
                                1,
                            ),
                            name: "f",
                        },
                    ),
                ),
                span: (
                    13,
                    4,
                ),
                right: Coalesce {
                    lhs: LiteralInteger {
                        i: "1",
                    },
                    rhs: Coalesce {
                        lhs: LiteralInteger {
                            i: "2",
                        },
                        rhs: LiteralInteger {
                            i: "3",
                        },
                    },
                },
            },
        ),
    },
]
