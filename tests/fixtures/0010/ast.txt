[
    FullOpeningTag(
        Span(
            1,
            1,
        ),
    ),
    Expression {
        expression: FunctionCall {
            target: Identifier(
                SimpleIdentifier(
                    SimpleIdentifier {
                        span: Span(
                            3,
                            1,
                        ),
                        value: "define",
                    },
                ),
            ),
            arguments: ArgumentList {
                comments: CommentGroup {
                    comments: [],
                },
                left_parenthesis: Span(
                    3,
                    7,
                ),
                arguments: [
                    Positional {
                        comments: CommentGroup {
                            comments: [],
                        },
                        ellipsis: None,
                        value: Literal(
                            String(
                                LiteralString {
                                    value: "'a'",
                                    span: Span(
                                        3,
                                        8,
                                    ),
                                },
                            ),
                        ),
                    },
                    Positional {
                        comments: CommentGroup {
                            comments: [],
                        },
                        ellipsis: None,
                        value: ComparisonOperation(
                            Equal {
                                left: Literal(
                                    Integer(
                                        LiteralInteger {
                                            value: "1",
                                            span: Span(
                                                3,
                                                13,
                                            ),
                                        },
                                    ),
                                ),
                                double_equals: Span(
                                    3,
                                    15,
                                ),
                                right: Literal(
                                    Integer(
                                        LiteralInteger {
                                            value: "1",
                                            span: Span(
                                                3,
                                                18,
                                            ),
                                        },
                                    ),
                                ),
                            },
                        ),
                    },
                ],
                right_parenthesis: Span(
                    3,
                    19,
                ),
            },
        },
        ending: Semicolon(
            Span(
                3,
                20,
            ),
        ),
    },
    Expression {
        expression: FunctionCall {
            target: Identifier(
                SimpleIdentifier(
                    SimpleIdentifier {
                        span: Span(
                            4,
                            1,
                        ),
                        value: "define",
                    },
                ),
            ),
            arguments: ArgumentList {
                comments: CommentGroup {
                    comments: [],
                },
                left_parenthesis: Span(
                    4,
                    7,
                ),
                arguments: [
                    Positional {
                        comments: CommentGroup {
                            comments: [],
                        },
                        ellipsis: None,
                        value: Literal(
                            String(
                                LiteralString {
                                    value: "'a'",
                                    span: Span(
                                        4,
                                        8,
                                    ),
                                },
                            ),
                        ),
                    },
                    Positional {
                        comments: CommentGroup {
                            comments: [],
                        },
                        ellipsis: None,
                        value: ComparisonOperation(
                            Identical {
                                left: Literal(
                                    Integer(
                                        LiteralInteger {
                                            value: "1",
                                            span: Span(
                                                4,
                                                13,
                                            ),
                                        },
                                    ),
                                ),
                                triple_equals: Span(
                                    4,
                                    15,
                                ),
                                right: Literal(
                                    Integer(
                                        LiteralInteger {
                                            value: "1",
                                            span: Span(
                                                4,
                                                19,
                                            ),
                                        },
                                    ),
                                ),
                            },
                        ),
                    },
                ],
                right_parenthesis: Span(
                    4,
                    20,
                ),
            },
        },
        ending: Semicolon(
            Span(
                4,
                21,
            ),
        ),
    },
    Expression {
        expression: FunctionCall {
            target: Identifier(
                SimpleIdentifier(
                    SimpleIdentifier {
                        span: Span(
                            5,
                            1,
                        ),
                        value: "define",
                    },
                ),
            ),
            arguments: ArgumentList {
                comments: CommentGroup {
                    comments: [],
                },
                left_parenthesis: Span(
                    5,
                    7,
                ),
                arguments: [
                    Positional {
                        comments: CommentGroup {
                            comments: [],
                        },
                        ellipsis: None,
                        value: Literal(
                            String(
                                LiteralString {
                                    value: "'a'",
                                    span: Span(
                                        5,
                                        8,
                                    ),
                                },
                            ),
                        ),
                    },
                    Positional {
                        comments: CommentGroup {
                            comments: [],
                        },
                        ellipsis: None,
                        value: ComparisonOperation(
                            NotEqual {
                                left: Literal(
                                    Integer(
                                        LiteralInteger {
                                            value: "1",
                                            span: Span(
                                                5,
                                                13,
                                            ),
                                        },
                                    ),
                                ),
                                bang_equals: Span(
                                    5,
                                    15,
                                ),
                                right: Literal(
                                    Integer(
                                        LiteralInteger {
                                            value: "1",
                                            span: Span(
                                                5,
                                                18,
                                            ),
                                        },
                                    ),
                                ),
                            },
                        ),
                    },
                ],
                right_parenthesis: Span(
                    5,
                    19,
                ),
            },
        },
        ending: Semicolon(
            Span(
                5,
                20,
            ),
        ),
    },
    Expression {
        expression: FunctionCall {
            target: Identifier(
                SimpleIdentifier(
                    SimpleIdentifier {
                        span: Span(
                            6,
                            1,
                        ),
                        value: "define",
                    },
                ),
            ),
            arguments: ArgumentList {
                comments: CommentGroup {
                    comments: [],
                },
                left_parenthesis: Span(
                    6,
                    7,
                ),
                arguments: [
                    Positional {
                        comments: CommentGroup {
                            comments: [],
                        },
                        ellipsis: None,
                        value: Literal(
                            String(
                                LiteralString {
                                    value: "'a'",
                                    span: Span(
                                        6,
                                        8,
                                    ),
                                },
                            ),
                        ),
                    },
                    Positional {
                        comments: CommentGroup {
                            comments: [],
                        },
                        ellipsis: None,
                        value: ComparisonOperation(
                            NotIdentical {
                                left: Literal(
                                    Integer(
                                        LiteralInteger {
                                            value: "1",
                                            span: Span(
                                                6,
                                                13,
                                            ),
                                        },
                                    ),
                                ),
                                bang_double_equals: Span(
                                    6,
                                    15,
                                ),
                                right: Literal(
                                    Integer(
                                        LiteralInteger {
                                            value: "1",
                                            span: Span(
                                                6,
                                                19,
                                            ),
                                        },
                                    ),
                                ),
                            },
                        ),
                    },
                ],
                right_parenthesis: Span(
                    6,
                    20,
                ),
            },
        },
        ending: Semicolon(
            Span(
                6,
                21,
            ),
        ),
    },
    Expression {
        expression: FunctionCall {
            target: Identifier(
                SimpleIdentifier(
                    SimpleIdentifier {
                        span: Span(
                            7,
                            1,
                        ),
                        value: "define",
                    },
                ),
            ),
            arguments: ArgumentList {
                comments: CommentGroup {
                    comments: [],
                },
                left_parenthesis: Span(
                    7,
                    7,
                ),
                arguments: [
                    Positional {
                        comments: CommentGroup {
                            comments: [],
                        },
                        ellipsis: None,
                        value: Literal(
                            String(
                                LiteralString {
                                    value: "'a'",
                                    span: Span(
                                        7,
                                        8,
                                    ),
                                },
                            ),
                        ),
                    },
                    Positional {
                        comments: CommentGroup {
                            comments: [],
                        },
                        ellipsis: None,
                        value: ArithmeticOperation(
                            Addition {
                                left: Literal(
                                    Integer(
                                        LiteralInteger {
                                            value: "1",
                                            span: Span(
                                                7,
                                                13,
                                            ),
                                        },
                                    ),
                                ),
                                plus: Span(
                                    7,
                                    15,
                                ),
                                right: Literal(
                                    Integer(
                                        LiteralInteger {
                                            value: "2",
                                            span: Span(
                                                7,
                                                17,
                                            ),
                                        },
                                    ),
                                ),
                            },
                        ),
                    },
                ],
                right_parenthesis: Span(
                    7,
                    18,
                ),
            },
        },
        ending: Semicolon(
            Span(
                7,
                19,
            ),
        ),
    },
    Expression {
        expression: FunctionCall {
            target: Identifier(
                SimpleIdentifier(
                    SimpleIdentifier {
                        span: Span(
                            8,
                            1,
                        ),
                        value: "define",
                    },
                ),
            ),
            arguments: ArgumentList {
                comments: CommentGroup {
                    comments: [],
                },
                left_parenthesis: Span(
                    8,
                    7,
                ),
                arguments: [
                    Positional {
                        comments: CommentGroup {
                            comments: [],
                        },
                        ellipsis: None,
                        value: Literal(
                            String(
                                LiteralString {
                                    value: "'a'",
                                    span: Span(
                                        8,
                                        8,
                                    ),
                                },
                            ),
                        ),
                    },
                    Positional {
                        comments: CommentGroup {
                            comments: [],
                        },
                        ellipsis: None,
                        value: ArithmeticOperation(
                            Subtraction {
                                left: Literal(
                                    Integer(
                                        LiteralInteger {
                                            value: "1",
                                            span: Span(
                                                8,
                                                13,
                                            ),
                                        },
                                    ),
                                ),
                                minus: Span(
                                    8,
                                    15,
                                ),
                                right: Literal(
                                    Integer(
                                        LiteralInteger {
                                            value: "2",
                                            span: Span(
                                                8,
                                                17,
                                            ),
                                        },
                                    ),
                                ),
                            },
                        ),
                    },
                ],
                right_parenthesis: Span(
                    8,
                    18,
                ),
            },
        },
        ending: Semicolon(
            Span(
                8,
                19,
            ),
        ),
    },
    Expression {
        expression: FunctionCall {
            target: Identifier(
                SimpleIdentifier(
                    SimpleIdentifier {
                        span: Span(
                            9,
                            1,
                        ),
                        value: "define",
                    },
                ),
            ),
            arguments: ArgumentList {
                comments: CommentGroup {
                    comments: [],
                },
                left_parenthesis: Span(
                    9,
                    7,
                ),
                arguments: [
                    Positional {
                        comments: CommentGroup {
                            comments: [],
                        },
                        ellipsis: None,
                        value: Literal(
                            String(
                                LiteralString {
                                    value: "'a'",
                                    span: Span(
                                        9,
                                        8,
                                    ),
                                },
                            ),
                        ),
                    },
                    Positional {
                        comments: CommentGroup {
                            comments: [],
                        },
                        ellipsis: None,
                        value: ArithmeticOperation(
                            Division {
                                left: Literal(
                                    Integer(
                                        LiteralInteger {
                                            value: "1",
                                            span: Span(
                                                9,
                                                13,
                                            ),
                                        },
                                    ),
                                ),
                                slash: Span(
                                    9,
                                    15,
                                ),
                                right: Literal(
                                    Integer(
                                        LiteralInteger {
                                            value: "2",
                                            span: Span(
                                                9,
                                                17,
                                            ),
                                        },
                                    ),
                                ),
                            },
                        ),
                    },
                ],
                right_parenthesis: Span(
                    9,
                    18,
                ),
            },
        },
        ending: Semicolon(
            Span(
                9,
                19,
            ),
        ),
    },
    Expression {
        expression: FunctionCall {
            target: Identifier(
                SimpleIdentifier(
                    SimpleIdentifier {
                        span: Span(
                            10,
                            1,
                        ),
                        value: "define",
                    },
                ),
            ),
            arguments: ArgumentList {
                comments: CommentGroup {
                    comments: [],
                },
                left_parenthesis: Span(
                    10,
                    7,
                ),
                arguments: [
                    Positional {
                        comments: CommentGroup {
                            comments: [],
                        },
                        ellipsis: None,
                        value: Literal(
                            String(
                                LiteralString {
                                    value: "'a'",
                                    span: Span(
                                        10,
                                        8,
                                    ),
                                },
                            ),
                        ),
                    },
                    Positional {
                        comments: CommentGroup {
                            comments: [],
                        },
                        ellipsis: None,
                        value: BitwiseOperation(
                            Xor {
                                left: Literal(
                                    Integer(
                                        LiteralInteger {
                                            value: "1",
                                            span: Span(
                                                10,
                                                13,
                                            ),
                                        },
                                    ),
                                ),
                                span: Span(
                                    10,
                                    15,
                                ),
                                right: Literal(
                                    Integer(
                                        LiteralInteger {
                                            value: "2",
                                            span: Span(
                                                10,
                                                17,
                                            ),
                                        },
                                    ),
                                ),
                            },
                        ),
                    },
                ],
                right_parenthesis: Span(
                    10,
                    18,
                ),
            },
        },
        ending: Semicolon(
            Span(
                10,
                19,
            ),
        ),
    },
    Expression {
        expression: FunctionCall {
            target: Identifier(
                SimpleIdentifier(
                    SimpleIdentifier {
                        span: Span(
                            11,
                            1,
                        ),
                        value: "define",
                    },
                ),
            ),
            arguments: ArgumentList {
                comments: CommentGroup {
                    comments: [],
                },
                left_parenthesis: Span(
                    11,
                    7,
                ),
                arguments: [
                    Positional {
                        comments: CommentGroup {
                            comments: [],
                        },
                        ellipsis: None,
                        value: Literal(
                            String(
                                LiteralString {
                                    value: "'a'",
                                    span: Span(
                                        11,
                                        8,
                                    ),
                                },
                            ),
                        ),
                    },
                    Positional {
                        comments: CommentGroup {
                            comments: [],
                        },
                        ellipsis: None,
                        value: ArithmeticOperation(
                            Multiplication {
                                left: Literal(
                                    Integer(
                                        LiteralInteger {
                                            value: "1",
                                            span: Span(
                                                11,
                                                13,
                                            ),
                                        },
                                    ),
                                ),
                                asterisk: Span(
                                    11,
                                    15,
                                ),
                                right: Literal(
                                    Integer(
                                        LiteralInteger {
                                            value: "2",
                                            span: Span(
                                                11,
                                                17,
                                            ),
                                        },
                                    ),
                                ),
                            },
                        ),
                    },
                ],
                right_parenthesis: Span(
                    11,
                    18,
                ),
            },
        },
        ending: Semicolon(
            Span(
                11,
                19,
            ),
        ),
    },
    Expression {
        expression: FunctionCall {
            target: Identifier(
                SimpleIdentifier(
                    SimpleIdentifier {
                        span: Span(
                            12,
                            1,
                        ),
                        value: "define",
                    },
                ),
            ),
            arguments: ArgumentList {
                comments: CommentGroup {
                    comments: [],
                },
                left_parenthesis: Span(
                    12,
                    7,
                ),
                arguments: [
                    Positional {
                        comments: CommentGroup {
                            comments: [],
                        },
                        ellipsis: None,
                        value: Literal(
                            String(
                                LiteralString {
                                    value: "'a'",
                                    span: Span(
                                        12,
                                        8,
                                    ),
                                },
                            ),
                        ),
                    },
                    Positional {
                        comments: CommentGroup {
                            comments: [],
                        },
                        ellipsis: None,
                        value: BitwiseOperation(
                            RightShift {
                                left: Literal(
                                    Integer(
                                        LiteralInteger {
                                            value: "1",
                                            span: Span(
                                                12,
                                                13,
                                            ),
                                        },
                                    ),
                                ),
                                span: Span(
                                    12,
                                    15,
                                ),
                                right: Literal(
                                    Integer(
                                        LiteralInteger {
                                            value: "2",
                                            span: Span(
                                                12,
                                                18,
                                            ),
                                        },
                                    ),
                                ),
                            },
                        ),
                    },
                ],
                right_parenthesis: Span(
                    12,
                    19,
                ),
            },
        },
        ending: Semicolon(
            Span(
                12,
                20,
            ),
        ),
    },
    Expression {
        expression: FunctionCall {
            target: Identifier(
                SimpleIdentifier(
                    SimpleIdentifier {
                        span: Span(
                            13,
                            1,
                        ),
                        value: "define",
                    },
                ),
            ),
            arguments: ArgumentList {
                comments: CommentGroup {
                    comments: [],
                },
                left_parenthesis: Span(
                    13,
                    7,
                ),
                arguments: [
                    Positional {
                        comments: CommentGroup {
                            comments: [],
                        },
                        ellipsis: None,
                        value: Literal(
                            String(
                                LiteralString {
                                    value: "'a'",
                                    span: Span(
                                        13,
                                        8,
                                    ),
                                },
                            ),
                        ),
                    },
                    Positional {
                        comments: CommentGroup {
                            comments: [],
                        },
                        ellipsis: None,
                        value: BitwiseOperation(
                            LeftShift {
                                left: Literal(
                                    Integer(
                                        LiteralInteger {
                                            value: "1",
                                            span: Span(
                                                13,
                                                13,
                                            ),
                                        },
                                    ),
                                ),
                                span: Span(
                                    13,
                                    15,
                                ),
                                right: Literal(
                                    Integer(
                                        LiteralInteger {
                                            value: "2",
                                            span: Span(
                                                13,
                                                18,
                                            ),
                                        },
                                    ),
                                ),
                            },
                        ),
                    },
                ],
                right_parenthesis: Span(
                    13,
                    19,
                ),
            },
        },
        ending: Semicolon(
            Span(
                13,
                20,
            ),
        ),
    },
    Expression {
        expression: FunctionCall {
            target: Identifier(
                SimpleIdentifier(
                    SimpleIdentifier {
                        span: Span(
                            14,
                            1,
                        ),
                        value: "define",
                    },
                ),
            ),
            arguments: ArgumentList {
                comments: CommentGroup {
                    comments: [],
                },
                left_parenthesis: Span(
                    14,
                    7,
                ),
                arguments: [
                    Positional {
                        comments: CommentGroup {
                            comments: [],
                        },
                        ellipsis: None,
                        value: Literal(
                            String(
                                LiteralString {
                                    value: "'a'",
                                    span: Span(
                                        14,
                                        8,
                                    ),
                                },
                            ),
                        ),
                    },
                    Positional {
                        comments: CommentGroup {
                            comments: [],
                        },
                        ellipsis: None,
                        value: BitwiseOperation(
                            Or {
                                left: Literal(
                                    Integer(
                                        LiteralInteger {
                                            value: "1",
                                            span: Span(
                                                14,
                                                13,
                                            ),
                                        },
                                    ),
                                ),
                                span: Span(
                                    14,
                                    15,
                                ),
                                right: Literal(
                                    Integer(
                                        LiteralInteger {
                                            value: "2",
                                            span: Span(
                                                14,
                                                17,
                                            ),
                                        },
                                    ),
                                ),
                            },
                        ),
                    },
                ],
                right_parenthesis: Span(
                    14,
                    18,
                ),
            },
        },
        ending: Semicolon(
            Span(
                14,
                19,
            ),
        ),
    },
    Expression {
        expression: FunctionCall {
            target: Identifier(
                SimpleIdentifier(
                    SimpleIdentifier {
                        span: Span(
                            15,
                            1,
                        ),
                        value: "define",
                    },
                ),
            ),
            arguments: ArgumentList {
                comments: CommentGroup {
                    comments: [],
                },
                left_parenthesis: Span(
                    15,
                    7,
                ),
                arguments: [
                    Positional {
                        comments: CommentGroup {
                            comments: [],
                        },
                        ellipsis: None,
                        value: Literal(
                            String(
                                LiteralString {
                                    value: "'a'",
                                    span: Span(
                                        15,
                                        8,
                                    ),
                                },
                            ),
                        ),
                    },
                    Positional {
                        comments: CommentGroup {
                            comments: [],
                        },
                        ellipsis: None,
                        value: BitwiseOperation(
                            And {
                                left: Literal(
                                    Integer(
                                        LiteralInteger {
                                            value: "1",
                                            span: Span(
                                                15,
                                                13,
                                            ),
                                        },
                                    ),
                                ),
                                span: Span(
                                    15,
                                    15,
                                ),
                                right: Literal(
                                    Integer(
                                        LiteralInteger {
                                            value: "2",
                                            span: Span(
                                                15,
                                                17,
                                            ),
                                        },
                                    ),
                                ),
                            },
                        ),
                    },
                ],
                right_parenthesis: Span(
                    15,
                    18,
                ),
            },
        },
        ending: Semicolon(
            Span(
                15,
                19,
            ),
        ),
    },
    Expression {
        expression: FunctionCall {
            target: Identifier(
                SimpleIdentifier(
                    SimpleIdentifier {
                        span: Span(
                            16,
                            1,
                        ),
                        value: "define",
                    },
                ),
            ),
            arguments: ArgumentList {
                comments: CommentGroup {
                    comments: [],
                },
                left_parenthesis: Span(
                    16,
                    7,
                ),
                arguments: [
                    Positional {
                        comments: CommentGroup {
                            comments: [],
                        },
                        ellipsis: None,
                        value: Literal(
                            String(
                                LiteralString {
                                    value: "'a'",
                                    span: Span(
                                        16,
                                        8,
                                    ),
                                },
                            ),
                        ),
                    },
                    Positional {
                        comments: CommentGroup {
                            comments: [],
                        },
                        ellipsis: None,
                        value: BitwiseOperation(
                            Not {
                                span: Span(
                                    16,
                                    13,
                                ),
                                right: Literal(
                                    Integer(
                                        LiteralInteger {
                                            value: "2",
                                            span: Span(
                                                16,
                                                14,
                                            ),
                                        },
                                    ),
                                ),
                            },
                        ),
                    },
                ],
                right_parenthesis: Span(
                    16,
                    15,
                ),
            },
        },
        ending: Semicolon(
            Span(
                16,
                16,
            ),
        ),
    },
    Echo {
        echo: Span(
            18,
            1,
        ),
        values: [
            ArithmeticOperation(
                Subtraction {
                    left: ArithmeticOperation(
                        Addition {
                            left: Literal(
                                Integer(
                                    LiteralInteger {
                                        value: "1",
                                        span: Span(
                                            18,
                                            6,
                                        ),
                                    },
                                ),
                            ),
                            plus: Span(
                                18,
                                8,
                            ),
                            right: ArithmeticOperation(
                                Division {
                                    left: ArithmeticOperation(
                                        Multiplication {
                                            left: Literal(
                                                Integer(
                                                    LiteralInteger {
                                                        value: "2",
                                                        span: Span(
                                                            18,
                                                            10,
                                                        ),
                                                    },
                                                ),
                                            ),
                                            asterisk: Span(
                                                18,
                                                12,
                                            ),
                                            right: Literal(
                                                Integer(
                                                    LiteralInteger {
                                                        value: "3",
                                                        span: Span(
                                                            18,
                                                            14,
                                                        ),
                                                    },
                                                ),
                                            ),
                                        },
                                    ),
                                    slash: Span(
                                        18,
                                        16,
                                    ),
                                    right: Literal(
                                        Integer(
                                            LiteralInteger {
                                                value: "4",
                                                span: Span(
                                                    18,
                                                    18,
                                                ),
                                            },
                                        ),
                                    ),
                                },
                            ),
                        },
                    ),
                    minus: Span(
                        18,
                        20,
                    ),
                    right: Literal(
                        Integer(
                            LiteralInteger {
                                value: "5",
                                span: Span(
                                    18,
                                    22,
                                ),
                            },
                        ),
                    ),
                },
            ),
        ],
        ending: Semicolon(
            Span(
                18,
                23,
            ),
        ),
    },
]
